{"version":3,"sources":["Components/SideMenu.js","Components/Header.js","Components/controls/Button.js","Components/controls/ActionButton.js","Components/controls/Controls.js","Components/controls/Input.js","Components/controls/RadioGroup.js","Components/controls/Select.js","Components/controls/Checkbox.js","Components/controls/DatePicker.js","Components/useForm.js","services/employeeService.js","pages/Employees/EmployeeForm.js","Components/PageHeader.js","Components/useTable.js","Components/Popup.js","Components/Notification.js","Components/ConfirmDialog.js","pages/Employees/Employees.js","App/App.js","serviceWorker.js","index.js"],"names":["withStyles","sideMenu","display","flexDirection","position","left","width","height","backgroundColor","props","classes","className","useStyles","makeStyles","theme","root","searchInput","opacity","padding","spacing","fontSize","marginRight","Header","AppBar","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","sm","IconButton","Badge","badgeContent","color","margin","label","textTransform","minWidth","secondary","palette","light","main","primary","Controls","Input","name","value","error","onChange","other","TextField","variant","helperText","RadioGroup","items","FormControl","FormLabel","row","map","FormControlLabel","id","control","Radio","title","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","Button","text","size","onClick","ActionButton","children","Form","autoComplete","KEYS","insertEmployee","data","employees","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","push","JSON","stringify","parse","departments","x","department","departmentId","genderItems","initialFValues","fullName","email","mobile","city","gender","hireDate","Date","isPermanent","EmployeeForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","validateOnChange","useState","setValues","handleInputChange","resetForm","useForm","useEffect","onSubmit","preventDefault","xs","type","pageHeader","marginBottom","pageIcon","pageTitle","paddingLeft","PageHeader","subTitle","icon","Paper","elevation","square","Card","Typography","component","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","dialogWrapper","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleClose","reason","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","message","dialog","textAlign","dialogContent","dialogAction","justifyContent","titleIcon","ConfirmDialog","confirmDialog","setConfirmDialog","disableRipple","DialogActions","onConfirm","pageContent","newButton","right","Employees","setRecordForEdit","employeeService","setRecords","setFilterFn","onDelete","filter","InputProps","InputAdornment","toLowerCase","includes","startIcon","TableBody","openInPopup","employee","recordIndex","findIndex","createMuiTheme","background","default","overrides","MuiAppBar","transform","MuiIconButton","appMain","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.195c681d.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\n\n// withStyles & makeStyles\n\nconst style = {\n    sideMenu: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        position: \"absolute\",\n        left: \"0px\",\n        width: \"320px\",\n        height: \"100%\",\n        backgroundColor: \"#253053\",\n    },\n};\n\nconst SideMenu = (props) => {\n    const { classes } = props;\n    return <div className={classes.sideMenu}></div>;\n};\n\nexport default withStyles(style)(SideMenu);\n","import React from \"react\";\nimport {\n    AppBar,\n    Toolbar,\n    Grid,\n    InputBase,\n    IconButton,\n    Badge,\n    makeStyles,\n} from \"@material-ui/core\";\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: \"#fff\",\n    },\n    searchInput: {\n        opacity: \"0.6\",\n        padding: `0px ${theme.spacing(1)}px`,\n        fontSize: \"0.8rem\",\n        \"&:hover\": {\n            backgroundColor: \"#f2f2f2\",\n        },\n        \"& .MuiSvgIcon-root\": {\n            marginRight: theme.spacing(1),\n        },\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n                <Grid container alignItems=\"center\">\n                    <Grid item>\n                        <InputBase\n                            placeholder=\"Search topics\"\n                            className={classes.searchInput}\n                            startAdornment={<SearchIcon fontSize=\"small\" />}\n                        />\n                    </Grid>\n                    <Grid item sm></Grid>\n                    <Grid item>\n                        <IconButton>\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <NotificationsNoneIcon fontSize=\"small\" />\n                            </Badge>\n                        </IconButton>\n                        <IconButton>\n                            <Badge badgeContent={3} color=\"primary\">\n                                <ChatBubbleOutlineIcon fontSize=\"small\" />\n                            </Badge>\n                        </IconButton>\n                        <IconButton>\n                            <PowerSettingsNewIcon fontSize=\"small\" />\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    );\n}\n","import React from \"react\";\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(0.5),\n    },\n    label: {\n        textTransform: \"none\",\n    },\n}));\n\nexport default function Button(props) {\n    const { text, size, color, variant, onClick, ...other } = props;\n    const classes = useStyles();\n\n    return (\n        <MuiButton\n            variant={variant || \"contained\"}\n            size={size || \"large\"}\n            color={color || \"primary\"}\n            onClick={onClick}\n            {...other}\n            classes={{ root: classes.root, label: classes.label }}\n        >\n            {text}\n        </MuiButton>\n    );\n}\n","import React from \"react\";\nimport { Button, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 0,\n        margin: theme.spacing(0.5),\n    },\n    secondary: {\n        backgroundColor: theme.palette.secondary.light,\n        \"& .MuiButton-label\": {\n            color: theme.palette.secondary.main,\n        },\n    },\n    primary: {\n        backgroundColor: theme.palette.primary.light,\n        \"& .MuiButton-label\": {\n            color: theme.palette.primary.main,\n        },\n    },\n}));\n\nexport default function ActionButton(props) {\n    const { color, children, onClick } = props;\n    const classes = useStyles();\n\n    return (\n        <Button\n            className={`${classes.root} ${classes[color]}`}\n            onClick={onClick}\n        >\n            {children}\n        </Button>\n    );\n}\n","import Input from \"./Input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Select from \"./Select\";\nimport Checkbox from \"./Checkbox\";\nimport DatePicker from \"./DatePicker\";\nimport Button from \"./Button\";\nimport ActionButton from \"./ActionButton\";\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Select,\n    Checkbox,\n    DatePicker,\n    Button,\n    ActionButton,\n};\n\nexport default Controls;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\nexport default function Input(props) {\n    const { name, label, value, error = null, onChange, ...other } = props;\n    return (\n        <TextField\n            variant=\"outlined\"\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...other}\n            {...(error && { error: true, helperText: error })}\n        />\n    );\n}\n","import React from \"react\";\nimport {\n    FormControl,\n    FormLabel,\n    RadioGroup as MuiRadioGroup,\n    FormControlLabel,\n    Radio,\n} from \"@material-ui/core\";\n\nexport default function RadioGroup(props) {\n    const { name, label, value, onChange, items } = props;\n\n    return (\n        <FormControl>\n            <FormLabel>{label}</FormLabel>\n            <MuiRadioGroup row name={name} value={value} onChange={onChange}>\n                {items.map((item) => (\n                    <FormControlLabel\n                        key={item.id}\n                        value={item.id}\n                        control={<Radio />}\n                        label={item.title}\n                    />\n                ))}\n            </MuiRadioGroup>\n        </FormControl>\n    );\n}\n","import React from \"react\";\nimport {\n    FormControl,\n    InputLabel,\n    Select as MuiSelect,\n    MenuItem,\n    FormHelperText,\n} from \"@material-ui/core\";\n\nexport default function Select(props) {\n    const { name, label, value, error = null, onChange, options } = props;\n\n    return (\n        <FormControl variant=\"outlined\" {...(error && { error: true })}>\n            <InputLabel>{label}</InputLabel>\n            <MuiSelect\n                label={label}\n                name={name}\n                value={value}\n                onChange={onChange}\n            >\n                <MenuItem value=\"\">None</MenuItem>\n                {options.map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                        {item.title}\n                    </MenuItem>\n                ))}\n            </MuiSelect>\n            {error && <FormHelperText>{error}</FormHelperText>}\n        </FormControl>\n    );\n}\n","import React from \"react\";\nimport {\n    FormControl,\n    FormControlLabel,\n    Checkbox as MuiCheckbox,\n} from \"@material-ui/core\";\n\nexport default function Checkbox(props) {\n    const { name, label, value, onChange } = props;\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name,\n            value,\n        },\n    });\n\n    return (\n        <FormControl>\n            <FormControlLabel\n                control={\n                    <MuiCheckbox\n                        name={name}\n                        color=\"primary\"\n                        checked={value}\n                        onChange={(e) =>\n                            onChange(\n                                convertToDefEventPara(name, e.target.checked)\n                            )\n                        }\n                    />\n                }\n                label={label}\n            />\n        </FormControl>\n    );\n}\n","import React from \"react\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default function DatePicker(props) {\n    const { name, label, value, onChange } = props;\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name,\n            value,\n        },\n    });\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                inputVariant=\"outlined\"\n                label={label}\n                format=\"MMM/dd/yyyy\"\n                name={name}\n                value={value}\n                onChange={(date) => onChange(convertToDefEventPara(name, date))}\n            />\n        </MuiPickersUtilsProvider>\n    );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n    const [values, setValues] = useState(initialFValues);\n    const [errors, setErrors] = useState({});\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setValues({\n            ...values,\n            [name]: value,\n        });\n        if (validateOnChange) validate({ [name]: value });\n    };\n\n    const resetForm = () => {\n        setValues(initialFValues);\n        setErrors({});\n    };\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        \"& .MuiFormControl-root\": {\n            width: \"80%\",\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nexport function Form(props) {\n    const classes = useStyles();\n    const { children, ...other } = props;\n    return (\n        <form className={classes.root} autoComplete=\"off\" {...other}>\n            {children}\n        </form>\n    );\n}\n","const KEYS = {\n    employees: \"employees\",\n    employeeId: \"employeeId\",\n};\n\nexport const getDepartmentCollection = () => [\n    { id: \"1\", title: \"Development\" },\n    { id: \"2\", title: \"Marketing\" },\n    { id: \"3\", title: \"Accounting\" },\n    { id: \"4\", title: \"HR\" },\n];\n\nexport function insertEmployee(data) {\n    let employees = getAllEmployees();\n    data[\"id\"] = generateEmployeeId();\n    employees.push(data);\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function updateEmployee(data) {\n    let employees = getAllEmployees();\n    let recordIndex = employees.findIndex((x) => x.id == data.id);\n    employees[recordIndex] = { ...data };\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function deleteEmployee(id) {\n    let employees = getAllEmployees();\n    employees = employees.filter((x) => x.id != id);\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function generateEmployeeId() {\n    if (localStorage.getItem(KEYS.employeeId) == null)\n        localStorage.setItem(KEYS.employeeId, \"0\");\n    var id = parseInt(localStorage.getItem(KEYS.employeeId));\n    localStorage.setItem(KEYS.employeeId, (++id).toString());\n    return id;\n}\n\nexport function getAllEmployees() {\n    if (localStorage.getItem(KEYS.employees) == null)\n        localStorage.setItem(KEYS.employees, JSON.stringify([]));\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    //map departmentID to department title\n    let departments = getDepartmentCollection();\n    return employees.map((x) => ({\n        ...x,\n        department: departments[x.departmentId - 1].title,\n    }));\n}\n","import React, { useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Controls from \"../../Components/controls/Controls\";\nimport { useForm, Form } from \"../../Components/useForm\";\nimport * as employeeService from \"../../services/employeeService\";\n\nconst genderItems = [\n    { id: \"male\", title: \"Male\" },\n    { id: \"female\", title: \"Female\" },\n    { id: \"other\", title: \"Other\" },\n];\n\nconst initialFValues = {\n    id: 0,\n    fullName: \"\",\n    email: \"\",\n    mobile: \"\",\n    city: \"\",\n    gender: \"male\",\n    departmentId: \"\",\n    hireDate: new Date(),\n    isPermanent: false,\n};\n\nexport default function EmployeeForm(props) {\n    const { addOrEdit, recordForEdit } = props;\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors };\n        if (\"fullName\" in fieldValues)\n            temp.fullName = fieldValues.fullName\n                ? \"\"\n                : \"This field is required.\";\n        if (\"email\" in fieldValues)\n            temp.email = /$^|.+@.+..+/.test(fieldValues.email)\n                ? \"\"\n                : \"Email is not valid.\";\n        if (\"mobile\" in fieldValues)\n            temp.mobile =\n                fieldValues.mobile.length > 9\n                    ? \"\"\n                    : \"Minimum 10 numbers required.\";\n        if (\"departmentId\" in fieldValues)\n            temp.departmentId =\n                fieldValues.departmentId.length !== 0\n                    ? \"\"\n                    : \"This field is required.\";\n        setErrors({\n            ...temp,\n        });\n\n        if (fieldValues === values)\n            return Object.values(temp).every((x) => x === \"\");\n    };\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm,\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (validate()) {\n            addOrEdit(values, resetForm);\n        }\n    };\n\n    useEffect(() => {\n        if (recordForEdit != null)\n            setValues({\n                ...recordForEdit,\n            });\n    }, [recordForEdit, setValues]);\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        error={errors.fullName}\n                    />\n                    <Controls.Input\n                        label=\"Email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n                    <Controls.Input\n                        label=\"Mobile\"\n                        name=\"mobile\"\n                        value={values.mobile}\n                        onChange={handleInputChange}\n                        error={errors.mobile}\n                    />\n                    <Controls.Input\n                        label=\"City\"\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.RadioGroup\n                        name=\"gender\"\n                        label=\"Gender\"\n                        value={values.gender}\n                        onChange={handleInputChange}\n                        items={genderItems}\n                    />\n                    <Controls.Select\n                        name=\"departmentId\"\n                        label=\"Department\"\n                        value={values.departmentId}\n                        onChange={handleInputChange}\n                        options={employeeService.getDepartmentCollection()}\n                        error={errors.departmentId}\n                    />\n                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    <Controls.Checkbox\n                        name=\"isPermanent\"\n                        label=\"Permanent Employee\"\n                        value={values.isPermanent}\n                        onChange={handleInputChange}\n                    />\n\n                    <div>\n                        <Controls.Button type=\"submit\" text=\"Submit\" />\n                        <Controls.Button\n                            text=\"Reset\"\n                            color=\"default\"\n                            onClick={resetForm}\n                        />\n                    </div>\n                </Grid>\n            </Grid>\n        </Form>\n    );\n}\n","import React from \"react\";\nimport { Paper, Card, Typography, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: \"#fdfdff\",\n    },\n    pageHeader: {\n        padding: theme.spacing(4),\n        display: \"flex\",\n        marginBottom: theme.spacing(2),\n    },\n    pageIcon: {\n        display: \"inline-block\",\n        padding: theme.spacing(2),\n        color: \"#3c44b1\",\n    },\n    pageTitle: {\n        paddingLeft: theme.spacing(4),\n        \"& .MuiTypography-subtitle2\": {\n            opacity: \"0.6\",\n        },\n    },\n}));\n\nexport default function PageHeader(props) {\n    const classes = useStyles();\n    const { title, subTitle, icon } = props;\n    return (\n        <Paper elevation={0} square className={classes.root}>\n            <div className={classes.pageHeader}>\n                <Card className={classes.pageIcon}>{icon}</Card>\n                <div className={classes.pageTitle}>\n                    <Typography variant=\"h6\" component=\"div\">\n                        {title}\n                    </Typography>\n                    <Typography variant=\"subtitle2\" component=\"div\">\n                        {subTitle}\n                    </Typography>\n                </div>\n            </div>\n        </Paper>\n    );\n}\n","import React, { useState } from \"react\";\nimport {\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    makeStyles,\n    TablePagination,\n    TableSortLabel,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        marginTop: theme.spacing(3),\n        \"& thead th\": {\n            fontWeight: \"600\",\n            color: theme.palette.primary.main,\n            backgroundColor: theme.palette.primary.light,\n        },\n        \"& tbody td\": {\n            fontWeight: \"300\",\n        },\n        \"& tbody tr:hover\": {\n            backgroundColor: \"#fffbf2\",\n            cursor: \"pointer\",\n        },\n    },\n}));\n\nexport default function useTable(records, headCells, filterFn) {\n    const classes = useStyles();\n\n    const pages = [5, 10, 25];\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page]);\n    const [order, setOrder] = useState();\n    const [orderBy, setOrderBy] = useState();\n\n    const TblContainer = (props) => (\n        <Table className={classes.table}>{props.children}</Table>\n    );\n\n    const TblHead = () => {\n        const handleSortRequest = (cellId) => {\n            const isAsc = orderBy === cellId && order === \"asc\";\n            setOrder(isAsc ? \"desc\" : \"asc\");\n            setOrderBy(cellId);\n        };\n\n        return (\n            <TableHead>\n                <TableRow>\n                    {headCells.map((headCell) => (\n                        <TableCell\n                            key={headCell.id}\n                            sortDirection={\n                                orderBy === headCell.id ? order : false\n                            }\n                        >\n                            {headCell.disableSorting ? (\n                                headCell.label\n                            ) : (\n                                <TableSortLabel\n                                    active={orderBy === headCell.id}\n                                    direction={\n                                        orderBy === headCell.id ? order : \"asc\"\n                                    }\n                                    onClick={() => {\n                                        handleSortRequest(headCell.id);\n                                    }}\n                                >\n                                    {headCell.label}\n                                </TableSortLabel>\n                            )}\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n        );\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const TblPagination = () => (\n        <TablePagination\n            component=\"div\"\n            page={page}\n            rowsPerPageOptions={pages}\n            rowsPerPage={rowsPerPage}\n            count={records.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    );\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    function getComparator(order, orderBy) {\n        return order === \"desc\"\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    const recordsAfterPagingAndSorting = () => {\n        return stableSort(\n            filterFn.fn(records),\n            getComparator(order, orderBy)\n        ).slice(page * rowsPerPage, (page + 1) * rowsPerPage);\n    };\n\n    return {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting,\n    };\n}\n","import React from \"react\";\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    makeStyles,\n    Typography,\n} from \"@material-ui/core\";\nimport Controls from \"./controls/Controls\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n    dialogWrapper: {\n        padding: theme.spacing(2),\n        position: \"absolute\",\n        top: theme.spacing(5),\n    },\n    dialogTitle: {\n        paddingRight: \"0px\",\n    },\n}));\n\nexport default function Popup(props) {\n    const { title, children, openPopup, setOpenPopup } = props;\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={openPopup}\n            maxWidth=\"md\"\n            classes={{ paper: classes.dialogWrapper }}\n        >\n            <DialogTitle className={classes.dialogTitle}>\n                <div style={{ display: \"flex\" }}>\n                    <Typography\n                        variant=\"h6\"\n                        component=\"div\"\n                        style={{ flexGrow: 1 }}\n                    >\n                        {title}\n                    </Typography>\n                    <Controls.ActionButton\n                        color=\"secondary\"\n                        onClick={() => {\n                            setOpenPopup(false);\n                        }}\n                    >\n                        <CloseIcon />\n                    </Controls.ActionButton>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers>{children}</DialogContent>\n        </Dialog>\n    );\n}\n","import React from \"react\";\nimport { Snackbar, makeStyles } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        top: theme.spacing(9),\n    },\n}));\n\nexport default function Notification(props) {\n    const { notify, setNotify } = props;\n    const classes = useStyles();\n\n    const handleClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n        setNotify({\n            ...notify,\n            isOpen: false,\n        });\n    };\n\n    return (\n        <Snackbar\n            className={classes.root}\n            open={notify.isOpen}\n            autoHideDuration={3000}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            onClose={handleClose}\n        >\n            <Alert severity={notify.type} onClose={handleClose}>\n                {notify.message}\n            </Alert>\n        </Snackbar>\n    );\n}\n","import React from \"react\";\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Typography,\n    makeStyles,\n    IconButton,\n} from \"@material-ui/core\";\nimport Controls from \"./controls/Controls\";\nimport NotListedLocationIcon from \"@material-ui/icons/NotListedLocation\";\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        padding: theme.spacing(2),\n        position: \"absolute\",\n        top: theme.spacing(5),\n    },\n    dialogTitle: {\n        textAlign: \"center\",\n    },\n    dialogContent: {\n        textAlign: \"center\",\n    },\n    dialogAction: {\n        justifyContent: \"center\",\n    },\n    titleIcon: {\n        backgroundColor: theme.palette.secondary.light,\n        color: theme.palette.secondary.main,\n        \"&:hover\": {\n            backgroundColor: theme.palette.secondary.light,\n            cursor: \"default\",\n        },\n        \"& .MuiSvgIcon-root\": {\n            fontSize: \"8rem\",\n        },\n    },\n}));\n\nexport default function ConfirmDialog(props) {\n    const { confirmDialog, setConfirmDialog } = props;\n    const classes = useStyles();\n\n    return (\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\n            <DialogTitle className={classes.dialogTitle}>\n                <IconButton disableRipple className={classes.titleIcon}>\n                    <NotListedLocationIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent}>\n                <Typography variant=\"h6\">{confirmDialog.title}</Typography>\n                <Typography variant=\"subtitle2\">\n                    {confirmDialog.subTitle}\n                </Typography>\n            </DialogContent>\n            <DialogActions className={classes.dialogAction}>\n                <Controls.Button\n                    text=\"No\"\n                    color=\"default\"\n                    onClick={() =>\n                        setConfirmDialog({ ...confirmDialog, isOpen: false })\n                    }\n                />\n                <Controls.Button\n                    text=\"Yes\"\n                    color=\"secondary\"\n                    onClick={confirmDialog.onConfirm}\n                />\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState } from \"react\";\nimport EmployeeForm from \"./EmployeeForm\";\nimport PageHeader from \"../../Components/PageHeader\";\nimport useTable from \"../../Components/useTable\";\nimport * as employeeService from \"../../services/employeeService\";\nimport Controls from \"../../Components/controls/Controls\";\nimport Popup from \"../../Components/Popup\";\nimport Notification from \"../../Components/Notification\";\nimport ConfirmDialog from \"../../Components/ConfirmDialog\";\nimport PeopleOutlineTwoToneIcon from \"@material-ui/icons/PeopleOutlineTwoTone\";\nimport {\n    Paper,\n    makeStyles,\n    TableBody,\n    TableRow,\n    TableCell,\n    Toolbar,\n    InputAdornment,\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n    pageContent: {\n        margin: theme.spacing(5),\n        padding: theme.spacing(3),\n    },\n    searchInput: {\n        width: \"75%\",\n    },\n    newButton: {\n        position: \"absolute\",\n        right: \"10px\",\n    },\n}));\n\nconst headCells = [\n    { id: \"fullName\", label: \"Employee Name\" },\n    { id: \"email\", label: \"Email Address (Personal)\" },\n    { id: \"mobile\", label: \"Mobile Number\" },\n    { id: \"department\", label: \"Department\" },\n    { id: \"actions\", label: \"Actions\", disableSorting: true },\n];\n\nexport default function Employees() {\n    const classes = useStyles();\n    const [recordForEdit, setRecordForEdit] = useState(null);\n    const [records, setRecords] = useState(employeeService.getAllEmployees());\n    const [filterFn, setFilterFn] = useState({\n        fn: (items) => {\n            return items;\n        },\n    });\n    const [openPopup, setOpenPopup] = useState(false);\n    const [notify, setNotify] = useState({\n        isOpen: false,\n        message: \"\",\n        type: \"\",\n    });\n    const [confirmDialog, setConfirmDialog] = useState({\n        isOpen: false,\n        title: \"\",\n        subTitle: \"\",\n    });\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting,\n    } = useTable(records, headCells, filterFn);\n\n    const handleSearch = (e) => {\n        let target = e.target;\n        setFilterFn({\n            fn: (items) => {\n                if (target.value === \"\") return items;\n                else\n                    return items.filter((x) =>\n                        x.fullName.toLowerCase().includes(target.value)\n                    );\n            },\n        });\n    };\n\n    const addOrEdit = (employee, resetForm) => {\n        if (employee.id === 0) employeeService.insertEmployee(employee);\n        else employeeService.updateEmployee(employee);\n        resetForm();\n        setRecordForEdit(null);\n        setOpenPopup(false);\n        setRecords(employeeService.getAllEmployees());\n        setNotify({\n            isOpen: true,\n            message: \"Submitted Successfully\",\n            type: \"success\",\n        });\n    };\n\n    const openInPopup = (item) => {\n        setRecordForEdit(item);\n        setOpenPopup(true);\n    };\n\n    const onDelete = (id) => {\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false,\n        });\n        employeeService.deleteEmployee(id);\n        setRecords(employeeService.getAllEmployees());\n        setNotify({\n            isOpen: true,\n            message: \"Deleted Successfully\",\n            type: \"error\",\n        });\n    };\n\n    return (\n        <>\n            <PageHeader\n                title=\"New Employee\"\n                subTitle=\"Form design with validation\"\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\n            />\n            <Paper className={classes.pageContent}>\n                <Toolbar>\n                    <Controls.Input\n                        label=\"Search Employees\"\n                        className={classes.searchInput}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <Search />\n                                </InputAdornment>\n                            ),\n                        }}\n                        onChange={handleSearch}\n                    />\n                    <Controls.Button\n                        text=\"Add New\"\n                        variant=\"outlined\"\n                        startIcon={<AddIcon />}\n                        className={classes.newButton}\n                        onClick={() => {\n                            setOpenPopup(true);\n                            setRecordForEdit(null);\n                        }}\n                    />\n                </Toolbar>\n                <TblContainer>\n                    <TblHead />\n                    <TableBody>\n                        {recordsAfterPagingAndSorting().map((item) => (\n                            <TableRow key={item.id}>\n                                <TableCell>{item.fullName}</TableCell>\n                                <TableCell>{item.email}</TableCell>\n                                <TableCell>{item.mobile}</TableCell>\n                                <TableCell>{item.department}</TableCell>\n                                <TableCell>\n                                    <Controls.ActionButton\n                                        color=\"primary\"\n                                        onClick={() => {\n                                            openInPopup(item);\n                                        }}\n                                    >\n                                        <EditOutlinedIcon fontSize=\"small\" />\n                                    </Controls.ActionButton>\n                                    <Controls.ActionButton\n                                        color=\"secondary\"\n                                        onClick={() => {\n                                            setConfirmDialog({\n                                                isOpen: true,\n                                                title:\n                                                    \"Are you sure to delete this record?\",\n                                                subTitle:\n                                                    \"You can't undo this operation\",\n                                                onConfirm: () => {\n                                                    onDelete(item.id);\n                                                },\n                                            });\n                                        }}\n                                    >\n                                        <CloseIcon fontSize=\"small\" />\n                                    </Controls.ActionButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </TblContainer>\n                <TblPagination />\n            </Paper>\n            <Popup\n                title=\"Employee Form\"\n                openPopup={openPopup}\n                setOpenPopup={setOpenPopup}\n            >\n                <EmployeeForm\n                    recordForEdit={recordForEdit}\n                    addOrEdit={addOrEdit}\n                />\n            </Popup>\n            <Notification notify={notify} setNotify={setNotify} />\n            <ConfirmDialog\n                confirmDialog={confirmDialog}\n                setConfirmDialog={setConfirmDialog}\n            />\n        </>\n    );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport SideMenu from \"../Components/SideMenu\";\nimport Header from \"../Components/Header\";\nimport {\n    makeStyles,\n    CssBaseline,\n    createMuiTheme,\n    ThemeProvider,\n} from \"@material-ui/core\";\n\nimport Employees from \"../pages/Employees/Employees\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#333996\",\n            light: \"#3c44b126\",\n        },\n        secondary: {\n            main: \"#f83245\",\n            light: \"#f8324526\",\n        },\n        background: {\n            default: \"#f4f5fd\",\n        },\n    },\n    overrides: {\n        MuiAppBar: {\n            root: {\n                transform: \"translateZ(0)\",\n            },\n        },\n    },\n    props: {\n        MuiIconButton: {\n            disableRipple: true,\n        },\n    },\n});\n\nconst useStyles = makeStyles({\n    appMain: {\n        paddingLeft: \"320px\",\n        width: \"100%\",\n    },\n});\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={theme}>\n            <SideMenu />\n            <div className={classes.appMain}>\n                <Header />\n\n                <Employees />\n            </div>\n            <CssBaseline />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    // eslint-disable-next-line\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}